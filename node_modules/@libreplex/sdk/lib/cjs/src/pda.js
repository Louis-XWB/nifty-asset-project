"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMintWrapperAddress = exports.getMetadataAddress = exports.getCreatorControllerAddress = exports.getCreatorAddress = exports.getCollectionAddress = void 0;
const web3_js_1 = require("@solana/web3.js");
const constants_1 = require("./constants");
function getCollectionAddress(collectionSeed, program = constants_1.LIBREPLEX_METADATA_PROGRAM_ID) {
    return web3_js_1.PublicKey.findProgramAddressSync([Buffer.from("collection"), collectionSeed.toBuffer()], constants_1.LIBREPLEX_METADATA_PROGRAM_ID)[0];
}
exports.getCollectionAddress = getCollectionAddress;
function getCreatorAddress(seed, program = constants_1.LIBREPLEX_CREATOR_PROGRAM_ID) {
    return web3_js_1.PublicKey.findProgramAddressSync([Buffer.from("creator"), seed.toBuffer()], program)[0];
}
exports.getCreatorAddress = getCreatorAddress;
function getCreatorControllerAddress(seed, programId = constants_1.LIBREPLEX_CREATOR_CONTROLS_PROGRAM_ID) {
    return web3_js_1.PublicKey.findProgramAddressSync([seed.toBuffer()], programId)[0];
}
exports.getCreatorControllerAddress = getCreatorControllerAddress;
function getMetadataAddress(mint, program = constants_1.LIBREPLEX_METADATA_PROGRAM_ID) {
    return web3_js_1.PublicKey.findProgramAddressSync([Buffer.from("metadata"),
        mint.toBuffer()], program)[0];
}
exports.getMetadataAddress = getMetadataAddress;
function getMintWrapperAddress(mint, program = constants_1.LIBREPLEX_NFT_PROGRAM_ID) {
    return web3_js_1.PublicKey.findProgramAddressSync([mint.toBuffer()], program)[0];
}
exports.getMintWrapperAddress = getMintWrapperAddress;
