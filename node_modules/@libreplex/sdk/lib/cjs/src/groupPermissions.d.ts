import { PublicKey } from "@solana/web3.js";
import { LibreplexMetadata } from "@libreplex/idls/lib/types/libreplex_metadata";
import { Connector } from "./createCollection";
export declare enum UserPermission {
    Update = 0,
    Delete = 1,
    AddToGroup = 2
}
export declare function getCollectionWideUserPermissionsAddress(collection: PublicKey, user: PublicKey, program?: PublicKey): PublicKey;
export declare function setUserPermissionsForGroup({ connector, collection, user, permissions, groupUpdateAuthority, }: {
    connector: Connector;
    collection: PublicKey;
    user: PublicKey;
    permissions: UserPermission[];
    groupUpdateAuthority: PublicKey;
}): Promise<import("@coral-xyz/anchor/dist/cjs/program/namespace/methods").MethodsBuilder<LibreplexMetadata, {
    name: "delegateCollectionPermissions";
    accounts: [{
        name: "updateAuthority";
        isMut: true;
        isSigner: true;
    }, {
        name: "userPermissions";
        isMut: true;
        isSigner: false;
        pda: {
            seeds: [{
                kind: "const";
                type: "string";
                value: "permissions";
            }, {
                kind: "account";
                type: "publicKey";
                path: "delegated_user";
            }, {
                kind: "account";
                type: "publicKey";
                account: "Collection";
                path: "collection";
            }];
        };
    }, {
        name: "collection";
        isMut: false;
        isSigner: false;
        relations: ["update_authority"];
    }, {
        name: "delegatedUser";
        isMut: false;
        isSigner: false;
    }, {
        name: "systemProgram";
        isMut: false;
        isSigner: false;
    }];
    args: [{
        name: "editPermissionsInput";
        type: {
            defined: "EditPermissionsInput";
        };
    }];
} & {
    name: "delegateCollectionPermissions";
}> | import("@coral-xyz/anchor/dist/cjs/program/namespace/methods").MethodsBuilder<LibreplexMetadata, {
    name: "updatePermissions";
    accounts: [{
        name: "updateAuthority";
        isMut: false;
        isSigner: true;
    }, {
        name: "user";
        isMut: false;
        isSigner: false;
    }, {
        name: "userPermissions";
        isMut: true;
        isSigner: false;
        relations: ["update_authority"];
    }];
    args: [{
        name: "input";
        type: {
            defined: "EditPermissionsInput";
        };
    }];
} & {
    name: "updatePermissions";
}>>;
