import { Keypair, SystemProgram } from "@solana/web3.js";
import { getCollectionAddress } from "./pda";
import { loadMetadataProgram } from "./programs";
export async function setupCollection(groupInfo) {
    const { connector, input, collectionAuthority, groupSeedKp = Keypair.generate() } = groupInfo;
    const collection = getCollectionAddress(groupSeedKp.publicKey);
    const metadataProgram = connector.type === "program" ? connector.metadataProgram : await loadMetadataProgram(connector.provider);
    return {
        method: metadataProgram.methods.createCollection({
            permittedSigners: input.permittedSigners || [],
            attributeTypes: input.onChainAttributes?.map(v => {
                return {
                    permittedValues: v.possibleValues,
                    continuedFromIndex: null,
                    continuedAtIndex: null,
                    deleted: false,
                    name: v.name,
                };
            }) || [],
            description: input.description,
            name: input.name,
            symbol: input.symbol,
            url: input.url,
            royalties: input.royalties
        }).accounts({
            authority: collectionAuthority,
            seed: groupSeedKp.publicKey,
            systemProgram: SystemProgram.programId,
            collection,
        }),
        collection,
    };
}
//# sourceMappingURL=createCollection.js.map